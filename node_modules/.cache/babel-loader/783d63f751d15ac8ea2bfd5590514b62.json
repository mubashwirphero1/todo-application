{"ast":null,"code":"import _objectSpread from\"D:/Back Up/Programing Hero/Assignment/Todo-APP-Typescript/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"D:/Back Up/Programing Hero/Assignment/Todo-APP-Typescript/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"D:/Back Up/Programing Hero/Assignment/Todo-APP-Typescript/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{TodoForm}from\"../components/TodoInput\";import{TodoList}from\"../components/TodoTable\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var TodosPage=function TodosPage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];useEffect(function(){var saved=JSON.parse(localStorage.getItem('todos')||'');setTodos(saved);},[]);useEffect(function(){localStorage.setItem('todos',JSON.stringify(todos));},[todos]);var addHandler=function addHandler(title){var newTodo={title:title,id:Date.now(),completed:false};setTodos(function(prev){return[newTodo].concat(_toConsumableArray(prev));});};var toggleHandler=function toggleHandler(id){setTodos(function(prev){return prev.map(function(todo){if(todo.id===id){return _objectSpread(_objectSpread({},todo),{},{completed:!todo.completed});}return todo;});});};var removeHandler=function removeHandler(id){var shouldRemove=confirm('Are you sure ?');if(shouldRemove){setTodos(function(prev){return prev.filter(function(todo){return todo.id!==id;});});}};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(TodoForm,{onAdd:addHandler}),/*#__PURE__*/_jsx(TodoList,{todos:todos,onToggle:toggleHandler,onRemove:removeHandler})]});};","map":{"version":3,"sources":["D:/Back Up/Programing Hero/Assignment/Todo-APP-Typescript/src/pages/Home.tsx"],"names":["React","useState","useEffect","TodoForm","TodoList","TodosPage","todos","setTodos","saved","JSON","parse","localStorage","getItem","setItem","stringify","addHandler","title","newTodo","id","Date","now","completed","prev","toggleHandler","map","todo","removeHandler","shouldRemove","confirm","filter"],"mappings":"obAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,QAAT,KAAyB,yBAAzB,CACA,OAASC,QAAT,KAAyB,yBAAzB,C,wFAKA,MAAO,IAAMC,CAAAA,SAAmB,CAAG,QAAtBA,CAAAA,SAAsB,EAAM,CACrC,cAA0BJ,QAAQ,CAAU,EAAV,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eAEAL,SAAS,CAAC,UAAM,CACZ,GAAMM,CAAAA,KAAK,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,GAAiC,EAA5C,CAAd,CACAL,QAAQ,CAACC,KAAD,CAAR,CACH,CAHQ,CAGN,EAHM,CAAT,CAKAN,SAAS,CAAC,UAAM,CACZS,YAAY,CAACE,OAAb,CAAqB,OAArB,CAA8BJ,IAAI,CAACK,SAAL,CAAgBR,KAAhB,CAA9B,EACH,CAFQ,CAEN,CAACA,KAAD,CAFM,CAAT,CAIA,GAAMS,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAmB,CAClC,GAAMC,CAAAA,OAAc,CAAG,CACnBD,KAAK,CAAEA,KADY,CAEnBE,EAAE,CAAEC,IAAI,CAACC,GAAL,EAFe,CAGnBC,SAAS,CAAE,KAHQ,CAAvB,CAKAd,QAAQ,CAAC,SAAAe,IAAI,SAAKL,OAAL,4BAAiBK,IAAjB,IAAL,CAAR,CACH,CAPD,CASA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACL,EAAD,CAAgB,CAClCX,QAAQ,CAAC,SAAAe,IAAI,QACTA,CAAAA,IAAI,CAACE,GAAL,CAAS,SAAAC,IAAI,CAAI,CACb,GAAIA,IAAI,CAACP,EAAL,GAAYA,EAAhB,CAAoB,CAChB,sCACOO,IADP,MAEIJ,SAAS,CAAE,CAACI,IAAI,CAACJ,SAFrB,GAIH,CACD,MAAOI,CAAAA,IAAP,CACH,CARD,CADS,EAAL,CAAR,CAUH,CAXD,CAaA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACR,EAAD,CAAgB,CAClC,GAAMS,CAAAA,YAAY,CAAGC,OAAO,CAAC,gBAAD,CAA5B,CACA,GAAID,YAAJ,CAAkB,CACdpB,QAAQ,CAAC,SAAAe,IAAI,QAAIA,CAAAA,IAAI,CAACO,MAAL,CAAY,SAAAJ,IAAI,QAAIA,CAAAA,IAAI,CAACP,EAAL,GAAYA,EAAhB,EAAhB,CAAJ,EAAL,CAAR,CACH,CACJ,CALD,CAOA,mBAAQ,MAAC,KAAD,CAAO,QAAP,yBACJ,KAAC,QAAD,EAAU,KAAK,CAAEH,UAAjB,EADI,cAEJ,KAAC,QAAD,EAAU,KAAK,CAAET,KAAjB,CAAwB,QAAQ,CAAEiB,aAAlC,CAAiD,QAAQ,CAAEG,aAA3D,EAFI,GAAR,CAIH,CA7CM","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TodoForm } from \"../components/TodoInput\";\r\nimport { TodoList } from \"../components/TodoTable\";\r\nimport { ITodo } from \"../interfaces\";\r\n\r\ndeclare var confirm: (question: string) => boolean\r\n\r\nexport const TodosPage: React.FC = () => {\r\n    const [todos, setTodos] = useState<ITodo[]>([])\r\n\r\n    useEffect(() => {\r\n        const saved = JSON.parse(localStorage.getItem('todos') || '') as ITodo[]\r\n        setTodos(saved)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify((todos)))\r\n    }, [todos])\r\n\r\n    const addHandler = (title: string) => {\r\n        const newTodo: ITodo = {\r\n            title: title,\r\n            id: Date.now(),\r\n            completed: false\r\n        }\r\n        setTodos(prev => [newTodo, ...prev])\r\n    }\r\n\r\n    const toggleHandler = (id: number) => {\r\n        setTodos(prev =>\r\n            prev.map(todo => {\r\n                if (todo.id === id) {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed\r\n                    }\r\n                }\r\n                return todo\r\n            }))\r\n    }\r\n\r\n    const removeHandler = (id: number) => {\r\n        const shouldRemove = confirm('Are you sure ?')\r\n        if (shouldRemove) {\r\n            setTodos(prev => prev.filter(todo => todo.id !== id))\r\n        }\r\n    }\r\n\r\n    return (<React.Fragment>\r\n        <TodoForm onAdd={addHandler} />\r\n        <TodoList todos={todos} onToggle={toggleHandler} onRemove={removeHandler} />\r\n    </React.Fragment>)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}